{"version":3,"file":"helper.b9d2f8c7.js","sources":["../../src/helpers/helper.js"],"sourcesContent":["// Query Parser helper\r\n\r\nfunction QsParser (query, groupByName) {\r\n  let parsed, hasOwn, pairs, pair, name, value\r\n\r\n  if (typeof query != 'string') {\r\n    throw new Error('Invalid Input !')\r\n  }else {\r\n    \r\n    parsed = {}\r\n    hasOwn = parsed.hasOwnProperty\r\n    query = query.replace(/\\+/g, ' ');\r\n    pairs = query.split(/[&;]/);\r\n\r\n    for (let i = 0; i < pairs.length; i++) {\r\n      pair = pairs[i].match(/^([^=]*)=?(.*)/)\r\n\r\n      if (pair[1]) {\r\n        try {\r\n          name  = decodeURIComponent(pair[1]);\r\n          value = decodeURIComponent(pair[2]);\r\n        }catch (e) {\r\n          throw 'Invaid %-encoded sequence';\r\n        }\r\n\r\n        if (!groupByName) {\r\n          parsed[name] = value;\r\n        } else if (hasOwn.call(parsed, name)) {\r\n          parsed[name].push(value);\r\n        } else {\r\n          parsed[name] = [value];\r\n        }\r\n      }\r\n    }\r\n\r\n    return parsed\r\n  }\r\n}\r\n\r\n\r\nexport  {\r\n  QsParser\r\n}"],"names":["QsParser","query","groupByName","parsed","hasOwn","pairs","pair","name","value","Error","hasOwnProperty","replace","split","i","length","match","decodeURIComponent","e","call","push"],"mappings":"AAEA,SAASA,EAAUC,EAAOC,GACxB,IAAIC,EAAQC,EAAQC,EAAOC,EAAMC,EAAMC,EAEvC,GAAoB,iBAATP,EACT,MAAM,IAAIQ,MAAM,mBAGhBN,EAAS,GACTC,EAASD,EAAOO,eAEhBL,GADAJ,EAAQA,EAAMU,QAAQ,MAAO,MACfC,MAAM,QAEpB,IAAK,IAAIC,EAAI,EAAGA,EAAIR,EAAMS,OAAQD,IAGhC,GAFAP,EAAOD,EAAMQ,GAAGE,MAAM,kBAElBT,EAAK,GAAI,CACX,IACEC,EAAQS,mBAAmBV,EAAK,IAChCE,EAAQQ,mBAAmBV,EAAK,IACjC,MAAOW,GACN,KAAM,4BAGHf,EAEME,EAAOc,KAAKf,EAAQI,GAC7BJ,EAAOI,GAAMY,KAAKX,GAElBL,EAAOI,GAAQ,CAACC,GAJhBL,EAAOI,GAAQC,EASrB,OAAOL"}